{% extends "layout.twig" %}

{% block title %}{{ 'navigation.mydevice'|trans }}{% endblock %}

{% block head %}
    <link href="{{ app.request.basepath }}/css/datepicker.css" rel="stylesheet">
    <link href="{{ app.request.basepath }}/css/home.css" rel="stylesheet">
{% endblock %}

{% block content %}
    {% set selectedDay = "now"|date('Y-m-d') %}
    {% set selectedMonth = "now"|date('Y-m') %}

    <div id='daily-chart'></div> <!-- Daily chart will be output here -->

    <div id='footer-daily'>
        <a href="javascript:getDay('{{ selectedDay|date_modify("-1 day")|date("Y-m-d") }}');" id='prev-day'>{{ 'stats.footer.previous'|trans }}</a>
		<span id='daily-text'>
			{% if (dayStats|raw|length != 2) %}
                {{ 'stats.footer.available'|trans }}
            {% else %}
                {{ 'stats.footer.notavailable'|trans }}
            {% endif %}
		</span>
        <span id='day-picker'>{{ selectedDay|date("d-m-Y") }}</span>
        <i id="icon-daily" class="icon-th"></i>
        <a href="javascript:getDay('{{ selectedDay|date_modify("+1 day")|date("Y-m-d") }}');" id='next-day'>{{ 'stats.footer.next'|trans }}</a>
    </div>

    <div id='monthly-chart'></div> <!-- Monthly chart will be output here -->

    <div id='footer-monthly'>
        <a href="javascript:getMonth('{{ selectedMonth|date("Y") }}-{{ selectedMonth|date_modify("-1 month")|date("m") }}');" id='prev-month'>{{ 'stats.footer.previous'|trans }}</a>
		<span id='monthly-text'>
			{% if (monthStats|raw|length != 2) %}
                {{ 'stats.footer.available'|trans }}
            {% else %}
                {{ 'stats.footer.notavailable'|trans }}
            {% endif %}
		</span>
        <span id='month-picker'>{{ selectedMonth|date("m-Y") }}</span>
        <i id="icon-monthly" class="icon-th"></i>
        <a href="javascript:getMonth('{{ selectedMonth|date("Y") }}-{{ selectedMonth|date_modify("+1 month")|date("m") }}');" id='next-month'>{{ 'stats.footer.next'|trans }}</a>
    </div>
{% endblock %}

{% block footer %}
    <script src="{{ app.request.basepath }}/js/highcharts/highcharts.js"></script>
    <script src="{{ app.request.basepath }}/js/highcharts/modules/exporting.js"></script>
    <script src="{{ app.request.basepath }}/js/date.js"></script>
    <script type="text/javascript" src="{{ app.request.basepath }}/js/bootstrap-datepicker.js" charset="UTF-8"></script>

    <script type="text/javascript">
    $(document).ready(function () {
        $("#icon-daily").datepicker({
            format: "yyyy-mm-dd",
            viewMode: "days",
            minViewMode: "days",
            autoclose: true
        }).on('changeDate', function (e) {
            getDay(e.date.toString('yyyy-MM-dd'));
        });

        $("#icon-monthly").datepicker({
            format: "yyyy-mm",
            viewMode: "months",
            minViewMode: "months",
            autoclose: true
        }).on('changeDate', function (e) {
            getMonth(e.date.toString('yyyy-MM'));
        });

        // Set minimum and maximum values
        $.getJSON("/val", function (data) {
            $('#icon-daily').datepicker('setStartDate', data['days']['min']);
            $('#icon-daily').datepicker('setEndDate', data['days']['max']);
            $('#icon-monthly').datepicker('setStartDate', data['months']['min']);
            $('#icon-monthly').datepicker('setEndDate', data['months']['max']);
        });
    });

    $('#daily-chart').highcharts({
        chart: {
            type: 'area'
        },
        title: {
            text: "{{ 'chart.title'|trans }}"
        },
        subtitle: {
            text: "{{ 'chart.day.subtitle'|trans }}"
        },
        plotOptions: {
            area: {
                shadow: false,
                states: {
                    hover: {
                        lineWidth: 2
                    }
                },
                marker: {
                    enabled: false,
                    states: {
                        hover: {
                            enabled: true,
                            radius: 4,
                            lineWidth: 1
                        }
                    }
                }
            }
        },
        xAxis: {
            type: 'datetime',
            tickInterval: 3600000
        },
        yAxis: {
            title: {
                text: 'kW'
            },
            plotLines: [
                {
                    value: 0,
                    width: 1,
                    color: '#808080'
                }
            ]
        },
        credits: {
            enabled: false
        },
        tooltip: {
            valueSuffix: 'kW',
            snap: 1
        },
        legend: {
            layout: 'vertical',
            align: 'right',
            verticalAlign: 'middle',
            borderWidth: 0
        },
        series: [
            {
                name: "{{ 'chart.kwgenerated'|trans }}",
                data: {{ dayStats }}
            }
        ]
    });

    $('#monthly-chart').highcharts({
        chart: {
            type: 'column'
        },
        title: {
            text: "{{ 'chart.title'|trans }}"
        },
        subtitle: {
            text: "{{ 'chart.month.subtitle'|trans }}"
        },
        plotOptions: {
            area: {
                shadow: false,
                states: {
                    hover: {
                        lineWidth: 2
                    }
                },
                marker: {
                    enabled: false,
                    states: {
                        hover: {
                            enabled: true,
                            radius: 4,
                            lineWidth: 1
                        }
                    }
                }
            }
        },
        xAxis: {
            type: 'datetime',
            tickInterval: 24 * 3600 * 1000,
            labels: {
                rotation: -90,
                y: 25
            }
        },
        yAxis: {
            title: {
                text: 'kW'
            },
            plotLines: [
                {
                    value: 0,
                    width: 1,
                    color: '#808080'
                }
            ]
        },
        credits: {
            enabled: false
        },
        tooltip: {
            valueSuffix: 'kW',
            snap: 1
        },
        legend: {
            layout: 'vertical',
            align: 'right',
            verticalAlign: 'middle',
            borderWidth: 0
        },
        series: [
            {
                name: "{{ 'chart.kwgenerated'|trans }}",
                data: {{ monthStats }}
            }
        ]
    });

    function updateFooter(date, emptyData)
    {
        var viewingText = (emptyData ? "{{ 'stats.footer.notavailable'|trans }}" : "{{ 'stats.footer.available'|trans }}");

        if (Date.parseExact(date, "yyyy-MM-dd")) { // we are updating the daily graph
            // Get previous and next date
            $.getJSON("/datecalc/" + date + "/Y-m-d", function (data) {
                $("#prev-day").attr("href", "javascript:getDay('" + data['prev'] + "');");
                $("#next-day").attr("href", "javascript:getDay('" + data['next'] + "');");
            });

            // Set viewing text and date
            $('#daily-text').html(viewingText);
            $('#day-picker').html(new Date(date).toString('dd-MM-yyyy'));
        } else { // we are updating the monthly graph
            // Get previous and next date
            $.getJSON("/datecalc/" + date + "/Y-m", function (data) {
                $("#prev-month").attr("href", "javascript:getMonth('" + data['prev'] + "');");
                $("#next-month").attr("href", "javascript:getMonth('" + data['next'] + "');");
            });

            // Set viewing text and date
            $('#monthly-text').html(viewingText);
            $('#month-picker').html(new Date(date).toString('MM-yyyy'));
        }
    }

    function getDay(date)
    {
        $('#daily-text').html("{{ 'stats.general.fetching'|trans }}");
        $('#day-picker').empty();

        $.getJSON("/stats/" + date, function (data) {
            var chart = $('#daily-chart').highcharts();
            chart.series[0].setData(data);
            updateFooter(date, data.length <= 2); // update the footer, second argument is to check if data is empty or not
        });
    }

    function getMonth(date)  // change to date ?
    {
        $('#monthly-text').html("{{ 'stats.general.fetching'|trans }}");
        $('#month-picker').empty();

        var splitData = date.split('-'); // split into year and month
        var year = splitData[0];
        var month = splitData[1];

        if (!Date.validateYear(parseInt(year)) || !Date.validateMonth(parseInt(month))) { // check if valid
            $('#monthly-text').html("{{ 'stats.general.fetchingfailed'|trans }}");
        } else {
            $.getJSON("/stats/" + year + '/' + month, function (data) {
                var chart = $('#monthly-chart').highcharts().series[0].setData(data);
                updateFooter(year + '-' + month, data.length <= 2); // update the footer, second argument is to check if data is empty or not
            });
        }
    }

    $(window).resize(function () {
        var chart = $('#daily-chart').highcharts();

        if ($(this).width() <= 768) { // change rotation based on viewport width
            chart.xAxis[0].update({
                labels: {
                    rotation: -90,
                    y: 25
                }
            });
        } else {
            chart.xAxis[0].update({
                labels: {
                    rotation: 0,
                    y: 15
                }
            })
        }
    });
    </script>
{% endblock %}
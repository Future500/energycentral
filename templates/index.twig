{% extends "layout.twig" %}

{% block title %}Index{% endblock %}

{% block extraTop %}
	<link href="{{ app.request.basepath }}/css/datepicker.css" rel="stylesheet">
{% endblock %}

{% block content %}
	<div id='dailyChart'>
	</div>

	<div id='footerDaily'>
		<a href="javascript:getDay('{{ date|date_modify("-1 day")|date("Y-m-d")}}');" id='prevDay'>{{ 'stats.footer.previous'|trans }}</a>
		<span id='dailyText'>
			{% if (dayStats|raw|length != 2) %}
				{{ 'stats.footer.available'|trans }}
			{% else %}
				{{ 'stats.footer.notAvailable'|trans }}
			{% endif %}
		</span>
		<span id='dayPicker'>{{ date|date("d-m-Y")}}</span>
		<i id="iconDaily" class="icon-th"></i>
		<a href="javascript:getDay('{{ date|date_modify("+1 day")|date("Y-m-d")}}');" id='nextDay'>{{ 'stats.footer.next'|trans }}</a>
	</div>

	<div id='monthlyChart'>
	</div>

	<div id='footerMonthly'>
		<a href="javascript:getMonth('{{ date|date("Y") }}-{{ date|date_modify("-1 month")|date("m") }}');" id='prevMonth'>{{ 'stats.footer.previous'|trans }}</a>
		<span id='monthlyText'>
			{% if (monthStats|raw|length != 2) %}
				{{ 'stats.footer.available'|trans }}
			{% else %}
				{{ 'stats.footer.notAvailable'|trans }}
			{% endif %}
		</span>
		<span id='monthPicker'>{{ date|date("m-Y")}}</span>
		<i id="iconMonthly" class="icon-th"></i>
		<a href="javascript:getMonth('{{ date|date("Y") }}-{{ date|date_modify("+1 month")|date("m") }}');" id='nextMonth'>{{ 'stats.footer.next'|trans }}</a>
	</div>
{% endblock %}

{% block extraBottom %}
	<script src="{{ app.request.basepath }}js/highcharts/highcharts.js"></script>
	<script src="{{ app.request.basepath }}js/highcharts/modules/exporting.js"></script>
	<script type="text/javascript" src="{{ app.request.basepath }}js/bootstrap.min.js" charset="UTF-8"></script>
	<script type="text/javascript" src="{{ app.request.basepath }}js/bootstrap-datepicker.js" charset="UTF-8"></script>

	<script type="text/javascript">
		$(document).ready(function() {
			$("#iconDaily").datepicker({
			 	format: "yyyy-mm-dd", 
				viewMode: "days", 
				minViewMode: "days",
			 	autoclose: true
			});

			$("#iconMonthly").datepicker({
			 	format: "yyyy-mm", 
				viewMode: "months", 
				minViewMode: "months",
			 	autoclose: true
			});

			$("#iconDaily").on('changeDate', function(e) {
				getDay(convertDate(e.date, false, true));
	    	});

			$("#iconMonthly").on('changeDate', function(e) {
				getMonth(convertDate(e.date, true, true));
	    	});

			// Set minimum and maximum values
			$.get("/val/min/month", function(data) {
				$('#iconMonthly').datepicker('setStartDate', data);
			});
			$.get("/val/max/month", function(data) { 
				$('#iconMonthly').datepicker('setEndDate', data);
			});
			$.get("/val/min/day", function(data) { 
				$('#iconDaily').datepicker('setStartDate', data);
			});
			$.get("/val/max/day", function(data) { 
				$('#iconDaily').datepicker('setEndDate', data);
			});
		});

		$(function () {
		    $('#dailyChart').highcharts({
				chart: {
					type: 'area'
				},
				title: {
					text: "{{ 'dailyChart.title'|trans }}"
				},
				subtitle: {
					text: "{{ 'dailyChart.subtitle'|trans }}"
				},
				plotOptions: {
					area: {
						shadow: false,
						states: {
							hover: {
								lineWidth: 2
							}
						},
						marker: {
							enabled: false,
							states: {
								hover: {
									enabled: true,
									radius: 4,
									lineWidth: 1
								}
							}
						}
					}
				},
				xAxis: {
					type: 'datetime',
       				tickInterval: 3600000
				},
				yAxis: {
					title: {
						text: 'kW'
					},
					plotLines: [{
						value: 0,
						width: 1,
						color: '#808080'
					}],
				},
				credits: {
					enabled:false
				},
				tooltip: {
					valueSuffix: 'kW',
					snap:1
				},
				legend: {
					layout: 'vertical',
					align: 'right',
					verticalAlign: 'middle',
					borderWidth: 0
				},
				series: [{
					name: "{{ 'dailyChart.kwGenerated'|trans }}",
          			data: {{ dayStats }}
				}]
		    });

			$('#monthlyChart').highcharts({
				chart: {
					type: 'column'
				},
				title: {
					text: "{{ 'monthlyChart.title'|trans }}"
				},
				subtitle: {
					text: "{{ 'monthlyChart.subtitle'|trans }}"
				},
				plotOptions: {
					area: {
						shadow: false,
						states: {
							hover: {
								lineWidth: 2
							}
						},
						marker: {
							enabled: false,
							states: {
								hover: {
									enabled: true,
									radius: 4,
									lineWidth: 1
								}
							}
						}
					}
				},
				xAxis: {
					type: 'datetime',
	       			tickInterval: 24 * 3600 * 1000,
					labels: {
						rotation: -90,
						y:25
					}
				},
				yAxis: {
					title: {
						text: 'kW'
					},
					plotLines: [{
						value: 0,
						width: 1,
						color: '#808080'
					}],
				},
				credits: {
					enabled:false
				},
				tooltip: {
					valueSuffix: 'kW',
					snap:1
				},
				legend: {
					layout: 'vertical',
					align: 'right',
					verticalAlign: 'middle',
					borderWidth: 0
				},
				series: [{
					name: "{{ 'monthlyChart.kwGenerated'|trans }}",
	          		data: {{ monthStats }}
				}]
			});
		});

		function convertDate(date, monthly, reverse)
		{
			var d = date.getDate();
			var m = date.getMonth() + 1;
			var y = date.getFullYear();

			if (monthly) {
				if (reverse) { // backwards
					return y + '-' + (m <= 9 ? '0' + m : m);
				} else {
					return (m <= 9 ? '0' + m : m) + '-' + y;
				}
			} else {
				if (reverse) {
					return y + '-' + (m <= 9 ? '0' + m : m) + '-' + (d <= 9 ? '0' + d : d);
				} else {
					return (d <= 9 ? '0' + d : d) + '-' + (m <= 9 ? '0' + m : m) + '-' + y;
				}
			}
		}

		function updateFooter(date, emptyData)
		{
			var viewingText = (emptyData ? "{{ 'stats.footer.notAvailable'|trans }}" : "{{ 'stats.footer.available'|trans }}");

			if (date.length > 7) { // we are updating the daily graph
				// Get previous and next date
				$.get("/dateCalc/" + date + "/inc/Y-m-d", function(data) { 
					$("#nextDay").attr("href", "javascript:getDay('" + data + "');");
				});

				$.get("/dateCalc/" + date + "/dec/Y-m-d", function(data) { 
					$("#prevDay").attr("href", "javascript:getDay('" + data + "');");
				});

				// Set viewing text and date
				$('#dailyText').html(viewingText);
				$('#dayPicker').html(convertDate(new Date(date)));
			} else { // we are updating the monthly graph
				// Get previous and next date
				$.get("/dateCalc/" + date + "/inc/Y-m", function(data) { 
					$("#nextMonth").attr("href", "javascript:getMonth('" + data + "');");
				});

				$.get("/dateCalc/" + date + "/dec/Y-m", function(data) { 
					$("#prevMonth").attr("href", "javascript:getMonth('" + data + "');");
				});

				// Set viewing text and date
				$('#monthlyText').html(viewingText);
				$('#monthPicker').html(convertDate(new Date(date), true));
			}
		}

		function getDay(date) 
		{
			$('#dailyText').html("{{ 'stats.general.fetching'|trans }}");
			$('#dayPicker').html('');

			$.getJSON("/" + date, function(data) { 
				var chart = $('#dailyChart').highcharts();
				chart.series[0].setData(data);
				updateFooter(date, data.length <= 2); // update the footer, second argument is to check if data is empty or not
			});
		}

		function getMonth(date)  // change to date ? 
		{
			$('#monthlyText').html("{{ 'stats.general.fetching'|trans }}");
			$('#monthPicker').html('');

			var splitData = date.split('-'); // split into year and month
			var year = splitData[0];
			var month = splitData[1];

			if (!year || !month) { // check if valid
				$('#monthlyText').html("{{ 'stats.general.fetchingFailed'|trans }}");
			} else {
				$.getJSON("/" + year + '/' + month, function(data) { 
					var chart = $('#monthlyChart').highcharts();
					chart.series[0].setData(data);
					updateFooter(year + '-' + month, data.length <= 2); // update the footer, second argument is to check if data is empty or not
				});
			}
		}
	</script>
{% endblock %}